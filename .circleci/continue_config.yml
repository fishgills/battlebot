version: 2.1
orbs:
  # aws-ecr: circleci/aws-ecr@8.2.1
  # aws-ecs: circleci/aws-ecs@3.2.0
  gcp-gcr: circleci/gcp-gcr@0.15.1

parameters:
  # A parameter per package
  backend:
    type: boolean
    default: false
  bot:
    type: boolean
    default: false
  web:
    type: boolean
    default: false

jobs:
  deploy_fargate:
    parameters:
      package_name:
        type: string
      dockerfile:
        type: string
        default: Dockerfile
      dlc:
        type: boolean
        default: true
    machine:
      docker_layer_caching: << parameters.dlc >> # Docker Layer Caching
      resource_class: medium # Resource Class(ARM VM)
      image: ubuntu-2004:current
    working_directory: ~/project/

    steps:
      - checkout
      - gcp-gcr/gcr-auth
      - gcp-gcr/build-image:
          image: << parameters.package_name >>
          dockerfile: << parameters.dockerfile >>
          extra_build_args: --build-arg SHA1=$(echo $CIRCLE_SHA1 | cut -c -8) --build-arg APP=<< parameters.package_name >>
          # tag: '$(echo $CIRCLE_SHA1 | cut -c -8)'
      - gcp-gcr/push-image:
          image: << parameters.package_name >>

      # - aws-ecr/build-and-push-image:
      #     repo: '<< parameters.package_name >>'
      #     dockerfile: << parameters.dockerfile >>
      #     platform: linux/arm64
      #     extra-build-args: --build-arg SHA1=$(echo $CIRCLE_SHA1 | cut -c -8) --build-arg APP=<< parameters.package_name >>
      #     create-repo: false
      #     tag: '$(echo $CIRCLE_SHA1 | cut -c -8)'
      #     # tag: '${CIRCLE_SHA1},$(echo $CIRCLE_BRANCH | sed -e "s/[^a-zA-Z]/\-/g")'
      # - aws-ecs/update-service:
      #     family: '<< parameters.package_name >>'
      #     cluster: 'mediator-cluster'
      #     service-name: '<< parameters.package_name >>'
      #     container-image-name-updates: 'container=<< parameters.package_name >>,image-and-tag=$AWS_ECR_REGISTRY_ID.dkr.ecr.$AWS_REGION.amazonaws.com/<< parameters.package_name >>:$(echo $CIRCLE_SHA1 | cut -c -8)'

      #     # ${var.account}.dkr.ecr.${var.region}.amazonaws.com/${lower(each.value.name)}:latest
      #     # container-env-var-updates: 'container=backend,name=DD_SERVICE,value=<< parameters.package_name >>'
workflows:
  backend:
    when: << pipeline.parameters.backend >>
    jobs:
      - deploy_fargate:
          name: backend-build
          package_name: backend
          context: EnvVariables
          filters:
            branches:
              only:
                - master
  bot:
    when: << pipeline.parameters.bot >>
    jobs:
      - deploy_fargate:
          name: bot-build
          package_name: bot
          context: EnvVariables
          dlc: true
          filters:
            branches:
              only:
                - master
  web:
    when: << pipeline.parameters.web >>
    jobs:
      - deploy_fargate:
          name: web-build
          package_name: web
          context: EnvVariables
          dockerfile: packages/web/Dockerfile
          filters:
            branches:
              only:
                - master
