version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-ecs: circleci/aws-ecs@3.2.0

parameters:
  # A parameter per package
  backend:
    type: boolean
    default: true
  bot:
    type: boolean
    default: false
  web:
    type: boolean
    default: false

jobs:
  deploy_fargate:
    parameters:
      package_name:
        type: string
    machine:
      docker_layer_caching: true # Docker Layer Caching
      resource_class: arm.medium # Resource Class(ARM VM)
      image: ubuntu-2004:current
    working_directory: ~/project/

    steps:
      - checkout
      - aws-ecr/build-and-push-image:
          repo: 'mediator-<< parameters.package_name >>'
          dockerfile: Dockerfile
          platform: linux/arm64
          extra-build-args: --build-arg SHA1=${CIRCLE_SHA1} --build-arg APP=<< parameters.package_name >>
          create-repo: false
          tag: 'latest'
          # tag: '${CIRCLE_SHA1},$(echo $CIRCLE_BRANCH | sed -e "s/[^a-zA-Z]/\-/g")'
      - aws-ecs/update-service:
          family: 'mediator-<< parameters.package_name >>'
          cluster: 'mediator-cluster'
          service-name: '<< parameters.package_name >>-Service'
          container-image-name-updates: 'container=<< parameters.package_name >>,tag=latest'
          # container-env-var-updates: 'container=<< parameters.package_name >>,name=DD_VERSION,value=${CIRCLE_SHA1}'

workflows:
  backend:
    when: << pipeline.parameters.backend >>
    jobs:
      - deploy_fargate:
          name: backend-build
          package_name: backend
          context: EnvVariables
          filters:
            branches:
              only:
                - master
  bot:
    when: << pipeline.parameters.bot >>
    jobs:
      - deploy_fargate:
          name: bot-build
          package_name: bot
          context: EnvVariables
          filters:
            branches:
              only:
                - master
