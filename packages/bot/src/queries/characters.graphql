fragment CharacterParts on Character {
  dexterity
  constitution
  strength
  name
  experiencePoints
  rolls
  level
  userId
  id
  gold
  teamId
  extraPoints
  active
  hitPoints
  losses
  wins
}

query getCharacterByOwner($userId: String!, $teamId: String!) {
  getCharacterByOwner(id: $userId, team: $teamId) {
    ...CharacterParts
  }
}

mutation createCharacter($input: CreateCharacterDto!) {
  createCharacter(CreateCharacter: $input) {
    ...CharacterParts
  }
}

mutation deleteCharacter($id: String!) {
  deleteCharacter(id: $id)
}

mutation rerollCharacter($id: String!) {
  reroll(id: $id) {
    ...CharacterParts
  }
}

mutation updateCharacter($id: String!, $input: UpdateCharacterDto!) {
  updateCharacter(id: $id, input: $input) {
    ...CharacterParts
  }
}

mutation Combat($input: CombatInput!) {
  combat(info: $input) {
    logs {
      ... on AttackLog {
        round
        type
        actor {
          name
        }
        target {
          name
        }
        details {
          attackModifier
          attackRoll
          damage
          defenderAc
          defenderHitPoints
          hit
        }
      }
      ... on InitiativeLog {
        actor {
          name
        }
        target {
          name
        }
        round
        type
      }
      ... on LevelUpLog {
        actor {
          name
        }
        target {
          name
        }
        round
        type
      }
      ... on XPGainLog {
        details {
          xp
        }
        actor {
          name
        }
        target {
          name
        }
        round
        type
      }
    }
    loser {
      name
    }
    winner {
      name
    }
  }
}
